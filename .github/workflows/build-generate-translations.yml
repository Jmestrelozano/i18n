name: Build and Generate Translations

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  cache-and-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install --include=dev

  generate-translations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache translations
        uses: actions/cache@v3
        with:
          path: ./src/translations
          key: ${{ runner.os }}-build-${{ hashFiles('**/translations') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    
      - name: Run generate file translation
        run: npm run generate-json

  test-and-coverage:
    runs-on: ubuntu-latest
    needs: 
      - cache-and-install
      - generate-translations
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      - name: Cache translations
        uses: actions/cache@v3
        with:
          path: ./src/translations
          key: ${{ runner.os }}-build-${{ hashFiles('**/translations') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache test
        uses: actions/cache@v3
        with:
          path: ./__test__
          key: ${{ runner.os }}-build-${{ hashFiles('**/test') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Create .env.test
        run: |
          cat <<EOF > .env.test
          REACT_APP_API_URL=http://localhost:4500
          EOF
  
      - name: Run test
        run: npm run test

      - name: Checking coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: "./coverage/lcov.info"
          min_coverage: 80

      - name: Delete .env.test
        if: success()
        run: rm .env.test

  build-and-upload:
    runs-on: ubuntu-latest
    needs: 
      - cache-and-install
      - generate-translations
      - test-and-coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache translations
        uses: actions/cache@v3
        with:
          path: ./src/translations
          key: ${{ runner.os }}-build-${{ hashFiles('**/translations') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    
      - name: Build Project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.3.6
        with:
          name: Build
          path: dist/
