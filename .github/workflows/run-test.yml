name: Run test

on:
  workflow_run:
    workflows: ["Build and Generate Translations"]  # Aquí el nombre exacto del workflow de construcción
    types:
      - completed

jobs:
  building:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Dependencies
        uses: actions/download-artifact@v4.1.8
        with:
          name: Dependencies
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: List files after downloading artifacts
        run: ls -R

      - name: Download Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: Build
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Translations Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: Translations
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  
  run-test:
    runs-on: ubuntu-latest
    needs: building
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files for debugging
        run: ls -R

      - name: Check if node_modules exists
        id: check_node_modules
        run: |
          if [ -d "./node_modules" ]; then
            echo "node_modules already exists. Skipping copy."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Copy node_modules if needed
        if: env.exists == 'false'
        run: |
          cp -r Dependencies/node_modules ./node_modules
        continue-on-error: false

      - name: Fail if node_modules does not exist
        if: env.exists == 'false'
        run: |
          if [ ! -d "./node_modules" ]; then
            echo "node_modules directory is missing. Please check artifact upload and download."
            exit 1
          fi

      - name: run unit test
        run: npm run test

      - name: "Checking coverage"
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: "./coverage/lcov.info"
          min_coverage: 80
